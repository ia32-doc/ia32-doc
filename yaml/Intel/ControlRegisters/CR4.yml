- name: CR4
  type: bitfield
  size: 64
  fields:
  - bit: 0
    short_name: VME
    long_name: VIRTUAL_MODE_EXTENSIONS
    short_description: Virtual-8086 Mode Extensions
    long_description: |
      Enables interrupt- and exception-handling extensions
      in virtual-8086 mode when set; disables the extensions when clear. Use of the virtual mode extensions can
      improve the performance of virtual-8086 applications by eliminating the overhead of calling the virtual-
      8086 monitor to handle interrupts and exceptions that occur while executing an 8086 program and,
      instead, redirecting the interrupts and exceptions back to the 8086 program’s handlers. It also provides
      hardware support for a virtual interrupt flag (VIF) to improve reliability of running 8086 programs in multitasking
      and multiple-processor environments.
    see: Vol3B[20.3(INTERRUPT AND EXCEPTION HANDLING IN VIRTUAL-8086 MODE)]

  - bit: 1
    short_name: PVI
    long_name: PROTECTED_MODE_VIRTUAL_INTERRUPTS
    short_description: Protected-Mode Virtual Interrupts
    long_description: |
      Enables hardware support for a virtual interrupt
      flag (VIF) in protected mode when set; disables the VIF flag in protected mode when clear.
    see: Vol3B[20.4(PROTECTED-MODE VIRTUAL INTERRUPTS)]

  - bit: 2
    short_name: TSD
    long_name: TIMESTAMP_DISABLE
    short_description: Time Stamp Disable
    long_description: |
      Restricts the execution of the RDTSC instruction to procedures
      running at privilege level 0 when set; allows RDTSC instruction to be executed at any privilege level when
      clear. This bit also applies to the RDTSCP instruction if supported (if CPUID.80000001H:EDX[27] = 1).

  - bit: 3
    short_name: DE
    long_name: DEBUGGING_EXTENSIONS
    short_description: Debugging Extensions
    long_description: |
      References to debug registers DR4 and DR5 cause an undefined
      opcode (#UD) exception to be generated when set; when clear, processor aliases references to registers
      DR4 and DR5 for compatibility with software written to run on earlier IA-32 processors.
    see: Vol3B[17.2.2(Debug Registers DR4 and DR5)]

  - bit: 4
    short_name: PSE
    long_name: PAGE_SIZE_EXTENSIONS
    short_description: Page Size Extensions
    long_description: |
      Enables 4-MByte pages with 32-bit paging when set; restricts
      32-bit paging to pages of 4 KBytes when clear.
    see: Vol3A[4.3(32-BIT PAGING)]

  - bit: 5
    short_name: PAE
    long_name: PHYSICAL_ADDRESS_EXTENSION
    short_description: Physical Address Extension
    long_description: |
      When set, enables paging to produce physical addresses
      with more than 32 bits. When clear, restricts physical addresses to 32 bits. PAE must be set before entering
      IA-32e mode.
    see: Vol3A[4(PAGING)]

  - bit: 6
    short_name: MCE
    long_name: MACHINE_CHECK_ENABLE
    short_description: Machine-Check Enable
    long_description: |
      Enables the machine-check exception when set; disables the
      machine-check exception when clear.
    see: Vol3B[15(MACHINE-CHECK ARCHITECTURE)]

  - bit: 7
    short_name: PGE
    long_name: PAGE_GLOBAL_ENABLE
    short_description: Page Global Enable
    long_description: |
      (Introduced in the P6 family processors.) Enables the global page
      feature when set; disables the global page feature when clear. The global page feature allows frequently
      used or shared pages to be marked as global to all users (done with the global flag, bit 8, in a page-directory
      or page-table entry). Global pages are not flushed from the translation-lookaside buffer (TLB) on a
      task switch or a write to register CR3.
      When enabling the global page feature, paging must be enabled (by setting the PG flag in control register
      CR0) before the PGE flag is set. Reversing this sequence may affect program correctness, and processor
      performance will be impacted.
    see: Vol3A[4.10(CACHING TRANSLATION INFORMATION)]

  - bit: 8
    short_name: PCE
    long_name: PERFORMANCE_MONITORING_COUNTER_ENABLE
    short_description: Performance-Monitoring Counter Enable
    long_description: |
      Enables execution of the RDPMC instruction
      for programs or procedures running at any protection level when set; RDPMC instruction can be
      executed only at protection level 0 when clear.

  - bit: 9
    short_name: OSFXSR
    long_name: OS_FXSAVE_FXRSTOR_SUPPORT
    short_description: Operating System Support for FXSAVE and FXRSTOR instructions
    long_description: |
      When set, this flag:

      -# indicates to software that the operating system supports the use of the FXSAVE and FXRSTOR
         instructions,

      -# enables the FXSAVE and FXRSTOR instructions to save and restore the contents of the
         XMM and MXCSR registers along with the contents of the x87 FPU and MMX registers, and

      -# enables the processor to execute SSE/SSE2/SSE3/SSSE3/SSE4 instructions, with the exception of the
         PAUSE, PREFETCHh, SFENCE, LFENCE, MFENCE, MOVNTI, CLFLUSH, CRC32, and POPCNT.

      If this flag is clear, the FXSAVE and FXRSTOR instructions will save and restore the contents of the x87 FPU
      and MMX registers, but they may not save and restore the contents of the XMM and MXCSR registers. Also,
      the processor will generate an invalid opcode exception (#UD) if it attempts to execute any
      SSE/SSE2/SSE3 instruction, with the exception of PAUSE, PREFETCHh, SFENCE, LFENCE, MFENCE,
      MOVNTI, CLFLUSH, CRC32, and POPCNT. The operating system or executive must explicitly set this flag.
    remarks: |
      CPUID feature flag FXSR indicates availability of the FXSAVE/FXRSTOR instructions. The OSFXSR
      bit provides operating system software with a means of enabling FXSAVE/FXRSTOR to save/restore
      the contents of the X87 FPU, XMM and MXCSR registers. Consequently OSFXSR bit indicates that
      the operating system provides context switch support for SSE/SSE2/SSE3/SSSE3/SSE4.

  - bit: 10
    short_name: OSXMMEXCPT
    long_name: OS_XMM_EXCEPTION_SUPPORT
    short_description: Operating System Support for Unmasked SIMD Floating-Point Exceptions
    long_description: |
      Operating System Support for Unmasked SIMD Floating-Point Exceptions —
      When set, indicates that the operating system supports the handling of unmasked SIMD floating-point
      exceptions through an exception handler that is invoked when a SIMD floating-point exception (#XM) is
      generated. SIMD floating-point exceptions are only generated by SSE/SSE2/SSE3/SSE4.1 SIMD floatingpoint
      instructions.

      The operating system or executive must explicitly set this flag. If this flag is not set, the processor will
      generate an invalid opcode exception (#UD) whenever it detects an unmasked SIMD floating-point exception.

  - bit: 11
    short_name: UMIP
    long_name: USERMODE_INSTRUCTION_PREVENTION
    short_description: User-Mode Instruction Prevention
    long_description: |
      When set, the following instructions cannot be
      executed if CPL > 0: SGDT, SIDT, SLDT, SMSW, and STR. An attempt at such execution causes a generalprotection
      exception (#GP).

  - bit: 12
    short_name: LA57
    long_name: LINEAR_ADDRESSES_57_BIT
    short_description: 57-bit Linear Addresses
    long_description: |
      When set in IA-32e mode, the processor uses 5-level paging to translate 57-bit linear addresses.
      When clear in IA-32e mode, the processor uses 4-level paging to translate 48-bit linear addresses.
      This bit cannot be modified in IA-32e mode.
    see: Vol3C[4(PAGING)]

  - bit: 13
    short_name: VMXE
    long_name: VMX_ENABLE
    short_description: VMX-Enable
    long_description: |
      Enables VMX operation when set.
    see: Vol3C[23(INTRODUCTION TO VIRTUAL MACHINE EXTENSIONS)]

  - bit: 14
    short_name: SMXE
    long_name: SMX_ENABLE
    short_description: SMX-Enable
    long_description: |
      Enables SMX operation when set.
    see: Vol2[6(SAFER MODE EXTENSIONS REFERENCE)]

  - bit: 16
    short_name: FSGSBASE
    long_name: FSGSBASE_ENABLE
    short_description: FSGSBASE-Enable
    long_description: |
      Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE,
      and WRGSBASE.

  - bit: 17
    short_name: PCIDE
    long_name: PCID_ENABLE
    short_description: PCID-Enable
    long_description: |
      Enables process-context identifiers (PCIDs) when set.
      Can be set only in IA-32e mode (if IA32_EFER.LMA = 1).
    see: Vol3A[4.10.1(Process-Context Identifiers (PCIDs))]

  - bit: 18
    short_name: OSXSAVE
    long_name: OS_XSAVE
    short_description: XSAVE and Processor Extended States-Enable
    long_description: |
      When set, this flag:

      -# indicates (via CPUID.01H:ECX.OSXSAVE[bit 27]) that the operating system supports
         the use of the XGETBV, XSAVE and XRSTOR instructions by general software;

      -# enables the XSAVE and XRSTOR instructions to save and restore the x87 FPU state
         (including MMX registers), the SSE state (XMM registers and MXCSR), along with other
         processor extended states enabled in XCR0;

      -# enables the processor to execute XGETBV and XSETBV instructions in order to read
         and write XCR0.
    see:
    - Vol3A[2.6(EXTENDED CONTROL REGISTERS (INCLUDING XCR0))]
    - Vol3A[13(SYSTEM PROGRAMMING FOR INSTRUCTION SET EXTENSIONS AND PROCESSOR EXTENDED)]

  - bit: 19
    short_name: KL
    long_name: KEY_LOCKER_ENABLE
    short_description: Key-Locker-Enable
    long_description: |
      When set, the LOADIWKEY instruction is enabled; in addition, if support for the AES Key Locker
      instructions has been activated by system firmware, CPUID.19H:EBX.AESKLE[bit 0] is enumerated
      as 1 and the AES Key Locker instructions are enabled. When clear, CPUID.19H:EBX.AESKLE[bit 0]
      is enumerated as 0 and execution of any Key Locker instruction causes an invalid-opcode exception
      (#UD).

  - bit: 20
    short_name: SMEP
    long_name: SMEP_ENABLE
    short_description: SMEP-Enable
    long_description: |
      Enables supervisor-mode execution prevention (SMEP) when set.
    see: Vol3A[4.6(ACCESS RIGHTS)]

  - bit: 21
    short_name: SMAP
    long_name: SMAP_ENABLE
    short_description: SMAP-Enable
    long_description: |
      Enables supervisor-mode access prevention (SMAP) when set.
    see: Vol3A[4.6(ACCESS RIGHTS)]

  - bit: 22
    short_name: PKE
    long_name: PROTECTION_KEY_ENABLE
    short_description: Protection-Key-Enable
    long_description: |
      Enables 4-level paging to associate each linear address
      with a protection key. The PKRU register specifies, for each protection key, whether user-mode linear
      addresses with that protection key can be read or written. This bit also enables access to the PKRU register
      using the RDPKRU and WRPKRU instructions.

  - bit: 23
    short_name: CET
    long_name: CONTROL_FLOW_ENFORCEMENT_ENABLE
    short_description: Control-flow Enforcement Technology
    long_description: |
      Enables control-flow enforcement technology when set. This flag can be set only if CR0.WP is set,
      and it must be clear before CR0.WP can be cleared.
    see: Vol1[18(CONTROL-FLOW ENFORCEMENT TECHNOLOGY (CET))]

  - bit: 24
    short_name: PKS
    long_name: PROTECTION_KEY_FOR_SUPERVISOR_MODE_ENABLE
    short_description: Enable protection keys for supervisor-mode pages
    long_description: |
      4-level paging and 5-level paging associate each supervisor-mode linear address with a protection
      key. When set, this flag allows use of the IA32_PKRS MSR to specify, for each protection key,
      whether supervisor-mode linear addresses with that protection key can be read or written.
